---
- name: ictf-database-api secret key
  debug: msg="The ROUTER created and using the iCTF API secret of '{{ ICTF_API_SECRET }}' "

- name: install requirements
  package: name={{ item }} state=latest update_cache=yes
  with_items:
    - iptraf
    - python-pip
    - python-dev
    - python3-dev
    - build-essential
    - awscli
    - iptables-persistent
    - iftop
    - libcurl4-openssl-dev
    - libssl-dev
  tags: [skip_ansible_lint]

- name: Upgrade pip and setuptools and related modules for cryptography fixes
  pip:
    name: "{{ item }}"
    state: latest
    extra_args: --upgrade
  with_items:
    pip
  become: true

- name: install python2 requirements
  pip:
    requirements: "/opt/ictf/router/requirements2.txt"
    executable: pip

- name: copy teamhosts to /etc/hosts	
  copy:	
    remote_src: yes	
    src: "/opt/ictf/common/teamhosts"	
    dest: /etc/hosts	
    owner: root	
    group: root	
    mode: "u=rw,g=r,o=r"

- name: update app armor to allow tcpdump to write in /ictf/data folder
  file:
    src=/etc/apparmor.d/usr.sbin.tcpdump
    dest=/etc/apparmor.d/disable/usr.sbin.tcpdump
    owner=root group=root mode="u=rw,g=r,o=r" state=link
  notify:
    - restart apparmor

- name: copy kernel settings to server
  template:
    src:   templates/sysctl.conf.j2
    dest:  /etc/sysctl.conf
    owner: root
    group: root
    mode:  0644

- name: Create config file for xt_recent so hitcount can be 255 in /etc/modeprobe.d
  copy:
    content: "options xt_recent ip_pkt_list_tot=255"
    dest: /etc/modprobe.d/ip_pkt_list_tot.conf
    force: no
    group: root
    owner: root
    mode:  0644
  register: xt_recent

- include_role:
    name: register_service_daemon
  vars:
    service_name: ictf-tcpdump
    description: "Daemon dumping iCTF traffic"
    command: "/usr/bin/python ictf-tcpdump.py"
    working_directory: "/opt/ictf/router"

- include_role:
    name: register_service_daemon
  vars:
    service_name: ictf-pcap-s3
    description: "Daemon transferring iCTF pcap backups to S3"
    command: "/usr/bin/python ictf-pcap-s3.py"
    working_directory: "/opt/ictf/router"

- name: copys a script that outputs a log of packets
  copy:
    src="{{ICTF_FRAMEWORK_DIR_HOST}}/router/iptables_log_parse.py"
    dest="/opt/ictf/router/iptables_log_parse.py"
    owner=root group=root mode="u=rwx,g=rx,o=rx"


- name: add GM specific aliases
  copy:
    content: "dns-resolution: no
              promiscuous: yes
              use-bytes: yes
              line-display: one-line-both
              net-filter: 172.31.129.0/19"
    dest:  ~/.iftoprc

- include_role:
    name: common_server
  vars:
    server_hostname: router
